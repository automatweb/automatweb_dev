When life seems dull, and you think that class_base doesn't offer enough flexibility when it comes to showing properties, then worry not, there is a solution: group based templates.

The idea itself is quite: you make a general template for misc variables, a group-based template where you position the elements just the way you need them to be positioned, define the use in class header and you have a flexible way of showing properties!

So, here it goes:

First, you need to make a default template for misc and undefined properties, grouptpl_default.tpl and save it your class' template directory ($aw_dir/templates/location/of/objects), which is basically a copy of templates/htmlclient/default.tpl with your modifications.
To do that, you just copy the default.tpl to your dir and modify it.
Renaming SUBs and VARs is not a thing i would recommend to do, because it could result in not seeing any content at all, in the other hand style and HTML modifications are ok and even recommended, as long as you can keep your code together.


Then you need to make a template for the group, that you are going to show (group_[groupname].tpl). the groupname should be the name of the group, that is the actual parent for the properties.
there are two ways of showing properties: 

* First, you define your property in a form of 
#code#
<!-- SUB: [property name] -->
<!-- END SUB: [property name] -->
#/code#
For that, you have to consult to grouptpl_default.tpl for the VARs, that are showed inside and add them (usually it is SUB: LINE, but it can vary, determine it yourself)
The advantage of this is, that you can define the placement and style of the property just the way you want it.
Things like SUBMIT, HEADER etc., can be defined in two way: either a general way, <!-- SUB: SUBMIT --> or a <!-- SUB: [submit_property_name] -->. The last one is preferred, when both are defined in a template.


* Second, you can define the property in a form of {VAR:[property name]}
Then the property will be parsed as a default property from grouptpl_default.tpl (this is also usually SUB: LINE). Disadvantage is, that all the props will look the same.


PS! you have to write ALL the required properties, e.g. if you have a form, then you have to include {VAR:reforb} and other things also, or else they will not be included and it WONT WORK.


Finally, add to @classinfo "tplmode=groups", run "make properties" and you should be done.


The templatesystem only works if both, grouptpl_default.tpl and group_[groupname].tpl are defined.

You should NEVER EVER use it with any @layout property and "grid" layout, because it won't and never will work with those, "boxed" layout is ok.

You can also consult to commune class for reference.
