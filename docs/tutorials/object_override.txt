Storagel selline v6imalus, et saab extendida objektiklasse. Näiteks kasutaja klassi laiendamiseks tuleb classes.ini-s määrata:

classes[197][object_override] = core/users/user_object

luua klassikataloogis fail classes/core/users/user_object.aw, mille sisuks:

<?php

class user_object extends _int_object
{
}

?>

Atribuutide get/set meetodid tuleb lisada vastavalt kujul awobj_get_{atribuudi nimi} / awobj_set_{atribuudi nimi}:

class user_object extends _int_object
{
	public function awobj_get_password_expires()
	{
		return $this->prop("password_hash_timestamp") + $this->prop("password_change_interval");
	}

	public function awobj_set_password_expires($value)
	{
		error::raise(array("msg" => "Password expiry modifiable via 'password_change_interval' property"));
	}
}

Kui object klassil kutsutakse välja meetod, mida seal pole defineeritud, üritatakse seda spetsialiseeritud klassist kutsuda:

class user_object extends _int_object
{
	public function password_valid()
	{
		return time() < $this->prop("password_expires");
	}
}

$user_obj = new object($user_obj_id);
$user_age = $user_obj->age();

Teisisõnu, saab lisada klassispetsiifilisi meetodeid.




